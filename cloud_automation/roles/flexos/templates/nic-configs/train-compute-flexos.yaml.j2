#jinja2: lstrip_blocks: "True", trim_blocks: "True"
heat_template_version: rocky
description: >
  Software Config to drive os-net-config to configure multiple interfaces for the Compute role.
parameters:
  ControlPlaneIp:
    default: ''
    description: IP address/subnet on the ctlplane network
    type: string
  InternalApiIpSubnet:
    default: ''
    description: IP address/subnet on the internal_api network
    type: string
  InternalApiInterfaceRoutes:
    default: []
    description: >
      Routes for the internal_api network traffic.
      JSON route e.g. [{'destination':'10.0.0.0/16', 'nexthop':'10.0.0.1'}]
      Unless the default is changed, the parameter is automatically resolved
      from the subnet host_routes attribute.
    type: json
  InternalApiMtu:
    default: 9000
    description: The maximum transmission unit (MTU) size(in bytes) that is
      guaranteed to pass through the data path of the segments in the
      InternalApi network.
    type: number
  StorageIpSubnet:
    default: ''
    description: IP address/subnet on the storage network
    type: string
  StorageMgmtIpSubnet:
    default: ''
    description: IP address/subnet on the storage_mgmt network
    type: string
  StorageMgmtInterfaceRoutes:
    default: []
    type: json
  StorageMgmtMtu:
    default: 9000
    type: number
  StorageNfsIpSubnet:
    default: ''
    description: IP address/subnet on the storage_nfs network
    type: string
  StorageNfsInterfaceRoutes:
    default: []
    type: json
  StorageNfsMtu:
    default: 9000
    type: number
  StorageInterfaceRoutes:
    default: []
    description: >
      Routes for the storage network traffic.
      JSON route e.g. [{'destination':'10.0.0.0/16', 'nexthop':'10.0.0.1'}]
      Unless the default is changed, the parameter is automatically resolved
      from the subnet host_routes attribute.
    type: json
  StorageMtu:
    default: 9000
    description: The maximum transmission unit (MTU) size(in bytes) that is
      guaranteed to pass through the data path of the segments in the
      Storage network.
    type: number
  TenantIpSubnet:
    default: ''
    description: IP address/subnet on the tenant network
    type: string
  TenantInterfaceRoutes:
    default: []
    description: >
      Routes for the tenant network traffic.
      JSON route e.g. [{'destination':'10.0.0.0/16', 'nexthop':'10.0.0.1'}]
      Unless the default is changed, the parameter is automatically resolved
      from the subnet host_routes attribute.
    type: json
  TenantMtu:
    default: 1500
    description: The maximum transmission unit (MTU) size(in bytes) that is
      guaranteed to pass through the data path of the segments in the
      Tenant network.
    type: number
  ExternalIpSubnet:
    default: ''
    description: IP address/subnet on the external network
    type: string
  ManagementIpSubnet:
    default: ''
    description: IP address/subnet on the management network
    type: string
  BondInterfaceOvsOptions:
    default: 'bond_mode=active-backup'
    description: The ovs_options string for the bond interface. Set things like
                 lacp=active and/or bond_mode=balance-slb using this option.
    type: string
  BondStorageInterfaceOvsOptions:
    default: 'bond_mode=active-backup'
    description: The ovs_options string for the bond interface. Set things like
                 lacp=active and/or bond_mode=balance-slb using this option.
    type: string
  # Documentation for BONDING_OPTS at https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/networking_guide/sec-using_channel_bonding
  BondInterfaceOptions:
    default: 'mode=active-backup miimon=100'
    description: The Linux bond configuration
    type: string
  # Documentation for BONDING_OPTS at https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/networking_guide/sec-using_channel_bonding
  BondStorageInterfaceOptions:
    default: 'mode=active-backup miimon=100'
    description: The Linux bond configuration
    type: string

  StorageNetworkVlanID:
    default: 30
    description: Vlan ID for the storage network traffic.
    type: number
  StorageMgmtNetworkVlanID:
    default: 40
    description: Vlan ID for the storage_mgmt network traffic.
    type: number
  StorageNfsNetworkVlanID:
    default: 70
    description: Vlan ID for the storage_nfs network traffic.
    type: number
  InternalApiNetworkVlanID:
    default: 20
    description: Vlan ID for the internal_api network traffic.
    type: number
  TenantNetworkVlanID:
    default: 50
    description: Vlan ID for the tenant network traffic.
    type: number
  ExternalNetworkVlanID:
    default: 10
    description: Vlan ID for the external network traffic.
    type: number
  ManagementNetworkVlanID:
    default: 60
    description: Vlan ID for the management network traffic.
    type: number
  ControlPlaneSubnetCidr: # Override this via parameter_defaults
    default: '24'
    description: The subnet CIDR of the control plane network.
    type: string
  ControlPlaneDefaultRoute: # Override this via parameter_defaults
    description: The default route of the control plane network.
    type: string
  ControlPlaneStaticRoutes:
    default: []
    description: >
      Routes for the ctlplane network traffic.
      JSON route e.g. [{'destination':'10.0.0.0/16', 'nexthop':'10.0.0.1'}]
      Unless the default is changed, the parameter is automatically resolved
      from the subnet host_routes attribute.
    type: json
  ControlPlaneMtu:
    default: 1500
    description: The maximum transmission unit (MTU) size(in bytes) that is
      guaranteed to pass through the data path of the segments in the network.
      (The parameter is automatically resolved from the ctlplane network's mtu attribute.)
    type: number
  DnsServers: # Override this via parameter_defaults
    default: []
    description: A list of DNS servers (2 max for some implementations) that will be added to resolv.conf.
    type: comma_delimited_list
  DnsSearchDomains: # Override this via parameter_defaults
    default: []
    description: A list of DNS search domains to be added (in order) to resolv.conf.
    type: comma_delimited_list
  EC2MetadataIp: # Override this via parameter_defaults
    description: The IP address of the EC2 metadata server.
    type: string
resources:
  OsNetConfigImpl:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config:
        str_replace:
          template:
            get_file: /usr/share/openstack-tripleo-heat-templates/network/scripts/run-os-net-config.sh
          params:
            $network_config:
              network_config:

              - type: ovs_bridge
                name: br-ex
                mtu: 9000
                use_dhcp: false
                dns_servers:
                  get_param: DnsServers
                domain: 
                  get_param: DnsSearchDomains
                members:
                - type: ovs_bond
                  name: bond0
                  ovs_options: {get_param: BondInterfaceOvsOptions}
                  members:
                  {% if split_ports == True %}
                  - type: interface                    
                    name: nic1
                    mtu: 9000
                    primary: true
                  - type: interface
                    name: nic3
                    mtu: 9000
                  {% else %}
                  - type: interface                    
                    name: nic1
                    mtu: 9000
                    primary: true
                  - type: interface
                    name: nic2
                    mtu: 9000
                  {% endif %}
                - type: vlan
                  mtu: 9000
                  vlan_id: {get_param: TenantNetworkVlanID}
                  addresses:
                  - ip_netmask: {get_param: TenantIpSubnet}
                - type: vlan
                  mtu: 9000
                  vlan_id:
                    get_param: InternalApiNetworkVlanID
                  addresses:
                  - ip_netmask:
                      get_param: InternalApiIpSubnet
                addresses:
                - ip_netmask:
                    list_join:
                    - /
                    - - get_param: ControlPlaneIp
                      - get_param: ControlPlaneSubnetCidr
                routes:
                - ip_netmask: 169.254.169.254/32
                  next_hop:
                    get_param: EC2MetadataIp
                - default: true
                  next_hop:
                    get_param: ControlPlaneDefaultRoute
              - type: linux_bond
                name: bond1
                mtu: 9000
                bonding_options: {get_param: BondStorageInterfaceOptions}
                members:
                {% if split_ports == True %}
                - type: interface
                  name: nic2
                  mtu: 9000
                  primary: true
                - type: interface
                  name: nic4
                  mtu: 9000
                {% else %}
                - type: interface
                  name: nic3
                  mtu: 9000
                  primary: true
                - type: interface
                  name: nic4
                  mtu: 9000
                {% endif %}
              - type: vlan
                mtu: 9000
                device: bond1
                vlan_id:
                  get_param: StorageNetworkVlanID
                addresses:
                - ip_netmask:
                    get_param: StorageIpSubnet
                {% if san_type == "flexos" %}
                routes:
                - ip_netmask: {{ storage_flexos_subnet }}
                  next_hop: {{ storage_gateway }}
                {% endif %}
              - type: vlan
                mtu: 9000
                device: bond1
                vlan_id:
                  get_param: StorageMgmtNetworkVlanID
                addresses:
                - ip_netmask:
                    get_param: StorageMgmtIpSubnet
                {% if san_type == "flexos" %}
                routes:
                - ip_netmask: {{ storage_mgmt_flexos_subnet }}
                  next_hop: {{ storage_mgmt_gateway }}
                {% endif %}
              {% if glance_backend == "file" %}
              - type: vlan
                mtu: 9000
                device: bond1
                vlan_id:
                  get_param: StorageNfsNetworkVlanID
                addresses:
                - ip_netmask:
                    get_param: StorageNfsIpSubnet
                {% if san_type == "flexos" %}
                routes:
                - ip_netmask: {{ storage_nfs_share_subnet }}
                  next_hop: {{ storage_nfs_gateway }}
                {% endif %}
                {% endif %}


outputs:
  OS::stack_id:
    description: The OsNetConfigImpl resource.
    value:
      get_resource: OsNetConfigImpl
